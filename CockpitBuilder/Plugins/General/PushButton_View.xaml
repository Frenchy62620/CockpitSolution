<UserControl 
    x:Class="CockpitBuilder.Plugins.General.PushButton_View"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:cal="http://www.caliburnproject.org"
    xmlns:pe="clr-namespace:CockpitBuilder.Common.PropertyEditors"
    xmlns:converters ="CockpitBuilder.Common.Converters"
    mc:Ignorable="d" d:DesignHeight="150" d:DesignWidth="70"
    x:Name="usercontrol"  ToolTip="{Binding ToolTip}"
    VerticalAlignment = "Top" HorizontalAlignment = "Left" ClipToBounds="True"
    cal:Message.Attach="[Event MouseEnter] = [Action MouseEnter($eventArgs)]">
    <!--RenderTransformOrigin="0.5,0.5"    ;[Event MouseLeftButtonDown] = [Action MouseLeftButtonDown($source, $mousepoint, 'false')]" -->
    <UserControl.RenderTransform>
        <TransformGroup>
            <RotateTransform x:Name="rotation" Angle="{Binding Layout.AngleRotation}" />
            <ScaleTransform x:Name="scale" ScaleX="{Binding ScaleX}" ScaleY="{Binding ScaleX}"/>
        </TransformGroup>
    </UserControl.RenderTransform>

    <Grid x:Name="Switch"  Width="{Binding Path=PluginWidth}" Height="{Binding Path=PluginHeight}" >
        <Image x:Name="Pushed" Source="{Binding pushButtonAppearance.PushedImage}"
               HorizontalAlignment="Center" VerticalAlignment="Center" >
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Setter Property="Visibility" Value="Hidden" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding pushButtonAppearance.IndexImage}" Value="1">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>

        <Image x:Name="Normal" Source="{Binding pushButtonAppearance.Image}"
               HorizontalAlignment="Center" VerticalAlignment="Center" >
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Setter Property="Visibility" Value="Hidden" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding pushButtonAppearance.IndexImage}" Value="0">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>

        <TextBlock Text="{Binding Appearance.GlyphText}" Foreground="{Binding Appearance.TextColor, Converter={StaticResource MyconverterColorToSolidColorBrush}}"
                   HorizontalAlignment="{Binding Appearance.HAlign}" VerticalAlignment="{Binding Appearance.VAlign}" 
                   FontFamily="{Binding Appearance.TextFormat.FontFamily}" FontSize="{Binding Appearance.TextFormat.FontSize}" FontStyle="{Binding Appearance.TextFormat.FontStyle}"
                   FontWeight="{Binding Appearance.TextFormat.FontWeight}" TextDecorations="{Binding Appearance.TextFormat.TextDecorations}">
            <TextBlock.Margin>
                <MultiBinding Converter="{StaticResource MyMultiConverterMargin }">
                    <Binding Path="Appearance.TextFormat.PaddingLeft" />
                    <Binding Path="Appearance.TextFormat.PaddingTop" />
                    <Binding Path="Appearance.TextFormat.PaddingRight" />
                    <Binding Path="Appearance.TextFormat.PaddingBottom" />
                    <Binding ElementName="Switch" Path="Width" />
                    <Binding ElementName="Switch" Path="Height" />
                </MultiBinding>
            </TextBlock.Margin>
            <TextBlock.Style>
                <Style TargetType="TextBlock" >
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding pushButtonAppearance.IndexImage}" Value="1">
                            <Setter Property="RenderTransform" >
                                <Setter.Value>
                                    <TransformGroup >
                                        <TranslateTransform X="{Binding Appearance.Offset.X}" Y="{Binding Appearance.Offset.Y}"  />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <Rectangle x:Name="DesignFrame"
                   Width="{Binding ElementName=Switch, Path=Width, UpdateSourceTrigger=PropertyChanged}"
                   Height="{Binding ElementName=Switch, Path=Height, UpdateSourceTrigger=PropertyChanged}"
                   Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{StaticResource IsModeSelected}"
                   cal:Message.Attach="[Event MouseLeftButtonDown] = [Action MouseLeftButtonDown($source, $mousepoint, $eventArgs, $executionContext, $datacontext)];[Event MouseLeftButtonUp] = [Action MouseLeftButtonUp]" >
        </Rectangle>

        <Path x:Name="Circle" StrokeThickness="{Binding Appearance.GlyphThickness}" Stroke="{Binding Appearance.GlyphColor, Converter={StaticResource MyconverterColorToSolidColorBrush}}" >
            <Path.Style>
                <Style TargetType="Path">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Appearance.GlyphSelected}" Value="1">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Path.Style>
            <Path.Data>
                <EllipseGeometry x:Name="Ellipse">
                    <EllipseGeometry.Center>
                        <MultiBinding Converter="{StaticResource CircleRadiusOrCenterCalculus}">
                            <Binding ElementName="Switch" Path="Width"/>
                            <Binding ElementName="Switch" Path="Height"/>
                        </MultiBinding>
                    </EllipseGeometry.Center>
                    <EllipseGeometry.RadiusX>
                        <MultiBinding Converter="{StaticResource CircleRadiusOrCenterCalculus}">
                            <Binding ElementName="Switch" Path="Width"/>
                            <Binding ElementName="Switch" Path="Height"/>
                            <Binding Path="pushButtonAppearance.GlyphScale"/>
                        </MultiBinding>
                    </EllipseGeometry.RadiusX>
                    <EllipseGeometry.RadiusY>
                        <Binding ElementName="Ellipse" Path="RadiusX"/>
                    </EllipseGeometry.RadiusY>
                </EllipseGeometry>
            </Path.Data>

            <!--<Path.Data>
                <EllipseGeometry Center="{Binding Appearance.Center, Mode=TwoWay}" RadiusX="{Binding Appearance.RadiusX, Mode=TwoWay}" RadiusY="{Binding Appearance.RadiusX, Mode=TwoWay}" />
            </Path.Data>-->

        </Path>
        <Path  x:Name="Arrows" StrokeThickness="{Binding Appearance.GlyphThickness}" Fill="{Binding RelativeSource={RelativeSource Self}, Path=Stroke}"
                               Stroke="{Binding ElementName=Circle, Path=Stroke}" >
            <Path.Style>
                <Style TargetType="Path">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Appearance.GlyphSelected}" Value="2">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Appearance.GlyphSelected}" Value="3">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Path.Style>
            <Path.Data>
                <PathGeometry>
                    <PathGeometry.Figures>
                        <PathFigureCollection>
                            <PathFigure IsClosed="True" StartPoint="{Binding Appearance.StartPoint}">
                                <PathFigure.Segments>
                                    <PathSegmentCollection>
                                        <LineSegment Point="{Binding Appearance.EndPoint}" IsStroked="True" />
                                        <LineSegment Point="{Binding Appearance.Head1Point}" />
                                        <LineSegment Point="{Binding Appearance.MiddlePoint}" />
                                        <LineSegment Point="{Binding Appearance.Head2Point}" />
                                        <LineSegment Point="{Binding Appearance.EndPoint}" />
                                    </PathSegmentCollection>
                                </PathFigure.Segments>
                            </PathFigure>
                        </PathFigureCollection>
                    </PathGeometry.Figures>
                </PathGeometry>
            </Path.Data>
        </Path>
        <Path x:Name="UpCaret" StrokeThickness="{Binding Appearance.GlyphThickness}" Stroke="{Binding ElementName=Circle, Path=Stroke}" >
            <Path.Style>
                <Style TargetType="Path">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Appearance.GlyphSelected}" Value="4">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Appearance.GlyphSelected}" Value="5">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Path.Style>

            <Path.Data>
                <PathGeometry>
                    <PathGeometry.Figures>
                        <PathFigureCollection>
                            <PathFigure IsClosed="False" StartPoint="{Binding Appearance.StartPoint}">
                                <PathFigure.Segments>
                                    <PathSegmentCollection>
                                        <LineSegment Point="{Binding Appearance.MiddlePoint}" IsStroked="True"/>
                                        <LineSegment Point="{Binding Appearance.EndPoint}" IsStroked="True" />
                                    </PathSegmentCollection>
                                </PathFigure.Segments>
                            </PathFigure>
                        </PathFigureCollection>
                    </PathGeometry.Figures>
                </PathGeometry>
            </Path.Data>
        </Path>

    </Grid>
</UserControl>
